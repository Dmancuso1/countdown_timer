{"version":3,"sources":["components/Timer.jsx","App.js","index.js"],"names":["Timer","_ref","deadlineTimestamp","warningColor","warningLimit","standardColor","timerUpColor","borderColor","warningBorderColor","showFooterInfo","showTitle","useTimerFont","showTimerIcon","_useState","useState","_useState2","Object","slicedToArray","days","setDays","_useState3","_useState4","hours","setHours","_useState5","_useState6","minutes","setMinutes","_useState7","_useState8","seconds","setSeconds","_useState9","_useState10","timerUp","setTimerUp","_useState11","_useState12","timeLeft","setTimeLeft","dtArr","split","mobileFriendlyDateParse","Date","countDownDate","getTime","useEffect","myfunc","setInterval","now","Math","floor","clearInterval","react_default","a","createElement","style","margin","padding","display","flexDirection","justifyContent","Fragment","color","textAlign","fontSize","ClockIcon","height","width","alignSelf","fontFamily","flexWrap","gap","border","fontWeight","App","position","className","Timer_Timer","overflow","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c2d51ae.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ClockIcon } from '@heroicons/react/outline'\n\nexport const Timer = ({\n  deadlineTimestamp,\n  warningColor,\n  warningLimit,\n  standardColor,\n  timerUpColor,\n  borderColor,\n  warningBorderColor,\n  showFooterInfo,\n  showTitle,\n  useTimerFont,\n  showTimerIcon,\n}) => {\n  const [days, setDays] = useState('')\n  const [hours, setHours] = useState('')\n  const [minutes, setMinutes] = useState('')\n  const [seconds, setSeconds] = useState('')\n  const [timerUp, setTimerUp] = useState(false)\n  const [timeLeft, setTimeLeft] = useState(1)\n\n  // let deadlineTimestamp = '2022-06-18 20:42:00-04'\n  let dtArr = deadlineTimestamp.split(/[- :]/) // explode parts of date into array to universalize the date for more browsers\n  let mobileFriendlyDateParse = new Date( // rebuild date string for more browser compatability\n    dtArr[0],\n    dtArr[1] - 1,\n    dtArr[2],\n    dtArr[3],\n    dtArr[4],\n    dtArr[5],\n  )\n  let countDownDate = new Date(mobileFriendlyDateParse).getTime()\n\n  useEffect(() => {\n    if (timerUp) return\n\n    // Run myfunc every second\n    const myfunc = setInterval(function () {\n      let now = new Date().getTime() // TODO: make for all browsers‚ÅÑ https://stackoverflow.com/questions/5324178/javascript-date-parsing-on-iphone\n\n      //let timeleft = countDownDate - now;\n      setTimeLeft(countDownDate - now)\n\n      let days = Math.floor(timeLeft / (1000 * 60 * 60 * 24))\n      let hours = Math.floor(\n        (timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n      )\n      let minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60))\n      let seconds = Math.floor((timeLeft % (1000 * 60)) / 1000)\n\n      // Calculating the days, hours, minutes and seconds left\n      setDays(days)\n      setHours(hours)\n      setMinutes(minutes)\n      setSeconds(seconds)\n\n      // Display the message when countdown is over\n      if (timeLeft < 0) {\n        clearInterval(myfunc)\n        setDays('')\n        setHours('')\n        setMinutes('')\n        setSeconds('')\n        setTimerUp(true)\n      }\n    }, 1000)\n\n    return () => {\n      // this runs as the clean up function for the useEffect\n      clearInterval(myfunc)\n    }\n  }, [days, hours, minutes, seconds, countDownDate, timeLeft, timerUp])\n\n  return (\n    <section\n      style={{\n        margin: '0 auto',\n        padding: '0 0 4rem 0 ',\n        display: 'flex',\n        flexDirection: 'column',\n        // height: '50px',\n        justifyContent: 'center',\n      }}\n    >\n      {/* Header */}\n      <div>\n        {showTitle && (\n          <>\n            <div\n              style={{\n                color: borderColor,\n                padding: '.5rem',\n                textAlign: 'center',\n              }}\n            >\n              <h3 style={{ fontSize: '2rem' }}>{showTitle} </h3>\n            </div>\n          </>\n        )}\n      </div>\n      {/* CLock Icon */}\n      {showTimerIcon && (\n        <>\n          <div style={{ textAlign: 'center', padding: '.5rem' }}>\n            <ClockIcon\n              style={{ height: '5rem', width: '5rem', color: 'white' }}\n            />\n          </div>\n        </>\n      )}\n\n      {/* when timer is up */}\n      {timeLeft < 0 || timerUp ? (\n        <div style={{ alignSelf: 'center', color: timerUpColor }}>\n          <p>TIMER UP!!!</p>\n          <p>\n            <small>Your time was up at {deadlineTimestamp}</small>\n          </p>\n        </div>\n      ) : (\n        // while timer is active\n        <>\n          <div\n            style={{\n              alignSelf: 'center',\n              color: standardColor,\n              fontFamily: useTimerFont ? `Chakra Petch` : `inherit`,\n            }}\n          >\n            {seconds !== '' && days + hours + minutes + seconds > 0 ? (\n              <div\n                style={{\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: '.5rem',\n                  color:\n                    !warningLimit || !warningColor\n                      ? standardColor\n                      : timeLeft > warningLimit - 1000\n                      ? standardColor\n                      : warningColor,\n                }}\n              >\n                <div\n                  style={{\n                    padding: '.5rem 0',\n                    border: `2px solid`,\n                    borderColor:\n                      !warningLimit || !warningBorderColor\n                        ? borderColor\n                        : timeLeft > warningLimit - 1000\n                        ? borderColor\n                        : warningBorderColor,\n                    width: '70px',\n                    textAlign: 'center',\n                    alignSelf: 'center',\n                  }}\n                >\n                  <p style={{ fontWeight: 'bold', fontSize: '1.5rem' }}>\n                    {days} d\n                  </p>\n                </div>\n\n                <div\n                  style={{\n                    padding: '.5rem 0',\n                    border: `2px solid`,\n                    borderColor:\n                      !warningLimit || !warningBorderColor\n                        ? borderColor\n                        : timeLeft > warningLimit - 1000\n                        ? borderColor\n                        : warningBorderColor,\n                    width: '70px',\n                    textAlign: 'center',\n                    alignSelf: 'center',\n                  }}\n                >\n                  <p style={{ fontWeight: 'bold', fontSize: '1.5rem' }}>\n                    {hours} h\n                  </p>\n                </div>\n\n                <div\n                  style={{\n                    padding: '.5rem 0',\n                    border: `2px solid`,\n                    borderColor:\n                      !warningLimit || !warningBorderColor\n                        ? borderColor\n                        : timeLeft > warningLimit - 1000\n                        ? borderColor\n                        : warningBorderColor,\n                    width: '70px',\n                    textAlign: 'center',\n                    alignSelf: 'center',\n                  }}\n                >\n                  <p style={{ fontWeight: 'bold', fontSize: '1.5rem' }}>\n                    {minutes} m\n                  </p>\n                </div>\n\n                <div\n                  style={{\n                    padding: '.5rem 0',\n                    border: `2px solid`,\n                    borderColor:\n                      !warningLimit || !warningBorderColor\n                        ? borderColor\n                        : timeLeft > warningLimit - 1000\n                        ? borderColor\n                        : warningBorderColor,\n                    width: '70px',\n                    textAlign: 'center',\n                    alignSelf: 'center',\n                  }}\n                >\n                  <p style={{ fontWeight: 'bold', fontSize: '1.5rem' }}>\n                    {seconds} s\n                  </p>\n                </div>\n              </div>\n            ) : (\n              <div>Loading...</div>\n            )}\n          </div>\n        </>\n      )}\n\n      <div>\n        {showFooterInfo && (\n          <>\n            <div\n              style={{\n                color: borderColor,\n                padding: '.5rem',\n                textAlign: 'center',\n                fontFamily: 'inherit',\n              }}\n            >\n              <p>Deadline set for {deadlineTimestamp}</p>\n            </div>\n          </>\n        )}\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport './index.css'\nimport { Timer } from './components/Timer'\nimport './styles.css'\n\n/*\n\n      deadlineTimestamp='2022-06-19 01:56:30-04' \n      standardColor = '#e6e6e6' (optional)\n      warningColor = 'salmon' (optional)\n      warningLimit = {300000} in milliseconds (optional)\n\n\n*/\n\nfunction App() {\n\n  return (\n    <main\n      style={{ position: 'relative', width: '100vw', height: '100vh', display: 'flex', justifyContent: 'center', flexDirection: 'column',flexWrap:'wrap'}}\n      className=\"main__bg\"\n    >\n\n      <div style={{}}>\n        <Timer\n          deadlineTimestamp=\"2022-11-12 0:00:00-04\"\n          borderColor=\"lightgray\"\n          warningBorderColor=\"salmon\"\n          standardColor=\"#e6e6e6\"\n          warningColor=\"salmon\"\n          warningLimit={1000 * 60 * 60}\n          timerUpColor=\"salmon\"\n          showFooterInfo={false}\n          showTitle=\"Duolingo 100 day countdown!\"\n          useTimerFont={true}\n          showTimerIcon={true}\n        />\n      </div>\n\n      <div style={{ width: '100%', overflow: 'hidden' }}>\n        {/* <img\n          src=\"https://images.pexels.com/photos/2662816/pexels-photo-2662816.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n          style={{ overflow: 'hidden', height: 'auto', width: '100%' }}\n        /> */}\n      </div>\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}